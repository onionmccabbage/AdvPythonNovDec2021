Advanced Python Review Exercise 1 until 2:45 (~1hr)
================================= share what you built
Write a function to find the square root of a positive integer
Ask the user for a number 'n' (check it is a positive numeric integer)
Print the square roots of the numbers from 1 to 'n' using map
You could 
- print each one
- populate a collection with all the resulting values
- write the results to a file
Optionally, do the same thing using list comprehension and with generator comprehension

Implement a function which takes a single parameter and reports if it is a square number 
(i.e. return True or False)
Use this as a filter-function to take the numbers -100 to 100 inclusive
and return only those values which are square numbers
(Again, consider using a collection for the resulting values)

Import the 'show_args' method from this morning and use it to decorate these functions

Optional
--------
In a separate module write a class which incorporates the functions you wrote above
Instances of the class should take min/max values (with sensible defaults)
The class methods should then apply map, filter or reduce to this range (min/max) and return nicely formatted results

Override the __str__ method so the class instances can print nicely
Provide docstrings for your classes and methods

Write your own decorator-function which takes a function as an input 
and nicely displays some intrinsics of that function
(such as __name__, __doc__, __module__, __dict__ and __str__)

Write an abstract base class which encapsulates properties for 'min' and 'max' and also at least one method. 
Architect your class so it inherits from this abstract base class



